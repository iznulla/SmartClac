#include <QVector>
#include "calculate.h"


class PlotCalc {
public:
  PlotCalc() = default;
  ~PlotCalc() = default;

   using result_pair = std::pair<QVector<double>, QVector<double>>;

//    N = (xEnd - xBegin)/h + 2;
  result_pair calcing_plot(double xBegin, double xEnd, QString data, QVector<double> *_x, QVector<double> *_y) {
      
      QVector<double> x, y;
      x.clear();
      y.clear();
      for (X = xBegin; X <= xEnd; X += h) {
          QString line = data, value;
          if (X < 0.01 && X > -0.01) X = 0;
          x.push_back(X);
          value = line.replace("X", '(' + (QString::number(X)) + ')');
          if (calc.checkLine(value.toStdString()))
              Y = calc.calculate(value.toStdString());
          y.push_back(Y);
      }
     return result_pair(x, y);
  }

  private:
  double h = 0.1, X, Y;
  Calculate calc{};
  

};